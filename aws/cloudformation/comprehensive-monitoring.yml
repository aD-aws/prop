AWSTemplateFormatVersion: '2010-09-09'
Description: 'UK Home Improvement Platform - Comprehensive Monitoring Dashboard'

Parameters:
  Environment:
    Type: String
    Default: production
    AllowedValues: [staging, production]
    Description: Environment name

Resources:
  # Comprehensive Application Dashboard
  ComprehensiveApplicationDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub '${Environment}-comprehensive-application-dashboard'
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "text",
              "x": 0,
              "y": 0,
              "width": 24,
              "height": 2,
              "properties": {
                "markdown": "# UK Home Improvement Platform - ${Environment} Environment\n\n**Last Updated:** $(date)\n\n**Environment:** ${Environment} | **Region:** ${AWS::Region}"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 2,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ApplicationELB", "RequestCount", "LoadBalancer", "${Environment}-uk-home-improvement-alb" ],
                  [ ".", "TargetResponseTime", ".", "." ],
                  [ ".", "HTTPCode_Target_2XX_Count", ".", "." ],
                  [ ".", "HTTPCode_Target_4XX_Count", ".", "." ],
                  [ ".", "HTTPCode_Target_5XX_Count", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Application Load Balancer - Request Metrics",
                "period": 300,
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 2,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ApplicationELB", "ActiveConnectionCount", "LoadBalancer", "${Environment}-uk-home-improvement-alb" ],
                  [ ".", "NewConnectionCount", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Application Load Balancer - Connection Metrics",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 8,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ECS", "CPUUtilization", "ServiceName", "${Environment}-backend-service", "ClusterName", "${Environment}-uk-home-improvement-cluster" ],
                  [ ".", "MemoryUtilization", ".", ".", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Backend Service - Resource Utilization",
                "period": 300,
                "yAxis": {
                  "left": {
                    "min": 0,
                    "max": 100
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 8,
              "y": 8,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ECS", "CPUUtilization", "ServiceName", "${Environment}-frontend-service", "ClusterName", "${Environment}-uk-home-improvement-cluster" ],
                  [ ".", "MemoryUtilization", ".", ".", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Frontend Service - Resource Utilization",
                "period": 300,
                "yAxis": {
                  "left": {
                    "min": 0,
                    "max": 100
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 16,
              "y": 8,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ECS", "RunningTaskCount", "ServiceName", "${Environment}-backend-service", "ClusterName", "${Environment}-uk-home-improvement-cluster" ],
                  [ ".", "DesiredCount", ".", ".", ".", "." ],
                  [ ".", "RunningTaskCount", "ServiceName", "${Environment}-frontend-service", "ClusterName", "${Environment}-uk-home-improvement-cluster" ],
                  [ ".", "DesiredCount", ".", ".", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "ECS Service - Task Counts",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 14,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/DynamoDB", "ConsumedReadCapacityUnits", "TableName", "${Environment}-uk-home-improvement" ],
                  [ ".", "ConsumedWriteCapacityUnits", ".", "." ],
                  [ ".", "ThrottledRequests", ".", "." ],
                  [ ".", "UserErrors", ".", "." ],
                  [ ".", "SystemErrors", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "DynamoDB - Performance Metrics",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 14,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/DynamoDB", "SuccessfulRequestLatency", "TableName", "${Environment}-uk-home-improvement", "Operation", "GetItem" ],
                  [ "...", "PutItem" ],
                  [ "...", "UpdateItem" ],
                  [ "...", "Query" ],
                  [ "...", "Scan" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "DynamoDB - Latency by Operation",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 20,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/Lambda", "Duration", "FunctionName", "${Environment}-document-processing" ],
                  [ ".", "Errors", ".", "." ],
                  [ ".", "Invocations", ".", "." ],
                  [ ".", "Throttles", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Document Processing Lambda",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 8,
              "y": 20,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/Lambda", "Duration", "FunctionName", "${Environment}-sow-generation" ],
                  [ ".", "Errors", ".", "." ],
                  [ ".", "Invocations", ".", "." ],
                  [ ".", "Throttles", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "SoW Generation Lambda",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 16,
              "y": 20,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/Lambda", "Duration", "FunctionName", "${Environment}-notification-service" ],
                  [ ".", "Errors", ".", "." ],
                  [ ".", "Invocations", ".", "." ],
                  [ ".", "Throttles", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Notification Service Lambda",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 26,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/Bedrock", "InvocationLatency", "ModelId", "anthropic.claude-3-5-sonnet-20241022-v2:0" ],
                  [ ".", "InvocationClientErrors", ".", "." ],
                  [ ".", "InvocationServerErrors", ".", "." ],
                  [ ".", "InvocationThrottles", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "AWS Bedrock - Claude 3.5 Sonnet Metrics",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 26,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/Bedrock", "InputTokenCount", "ModelId", "anthropic.claude-3-5-sonnet-20241022-v2:0" ],
                  [ ".", "OutputTokenCount", ".", "." ],
                  [ "AWS/Bedrock", "Invocations", "ModelId", "anthropic.claude-3-5-sonnet-20241022-v2:0" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "AWS Bedrock - Token Usage and Invocations",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 32,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/WAFV2", "AllowedRequests", "WebACL", "${Environment}-uk-home-improvement-waf", "Region", "${AWS::Region}", "Rule", "ALL" ],
                  [ ".", "BlockedRequests", ".", ".", ".", ".", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "WAF - Request Overview",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 32,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/WAFV2", "BlockedRequests", "WebACL", "${Environment}-uk-home-improvement-waf", "Region", "${AWS::Region}", "Rule", "RateLimitRule" ],
                  [ "...", "GeoRestrictionRule" ],
                  [ "...", "AWSManagedRulesCommonRuleSet" ],
                  [ "...", "AWSManagedRulesSQLiRuleSet" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "WAF - Blocked Requests by Rule",
                "period": 300
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 38,
              "width": 24,
              "height": 6,
              "properties": {
                "query": "SOURCE '/ecs/${Environment}-backend'\n| fields @timestamp, @message\n| filter @message like /ERROR/\n| sort @timestamp desc\n| limit 20",
                "region": "${AWS::Region}",
                "title": "Recent Application Errors",
                "view": "table"
              }
            }
          ]
        }

  # Performance Monitoring Dashboard
  PerformanceDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub '${Environment}-performance-monitoring-dashboard'
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "text",
              "x": 0,
              "y": 0,
              "width": 24,
              "height": 2,
              "properties": {
                "markdown": "# Performance Monitoring Dashboard - ${Environment}\n\n**Focus:** Response times, throughput, and resource efficiency"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 2,
              "width": 6,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ApplicationELB", "TargetResponseTime", "LoadBalancer", "${Environment}-uk-home-improvement-alb" ]
                ],
                "view": "singleValue",
                "region": "${AWS::Region}",
                "title": "Average Response Time",
                "period": 300,
                "stat": "Average"
              }
            },
            {
              "type": "metric",
              "x": 6,
              "y": 2,
              "width": 6,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ApplicationELB", "RequestCount", "LoadBalancer", "${Environment}-uk-home-improvement-alb" ]
                ],
                "view": "singleValue",
                "region": "${AWS::Region}",
                "title": "Requests per Minute",
                "period": 60,
                "stat": "Sum"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 2,
              "width": 6,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ECS", "CPUUtilization", "ServiceName", "${Environment}-backend-service", "ClusterName", "${Environment}-uk-home-improvement-cluster" ]
                ],
                "view": "singleValue",
                "region": "${AWS::Region}",
                "title": "Backend CPU Utilization",
                "period": 300,
                "stat": "Average"
              }
            },
            {
              "type": "metric",
              "x": 18,
              "y": 2,
              "width": 6,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/DynamoDB", "SuccessfulRequestLatency", "TableName", "${Environment}-uk-home-improvement", "Operation", "Query" ]
                ],
                "view": "singleValue",
                "region": "${AWS::Region}",
                "title": "DynamoDB Query Latency",
                "period": 300,
                "stat": "Average"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 8,
              "width": 24,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ApplicationELB", "TargetResponseTime", "LoadBalancer", "${Environment}-uk-home-improvement-alb" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Response Time Trend (24 hours)",
                "period": 300,
                "stat": "Average",
                "annotations": {
                  "horizontal": [
                    {
                      "label": "SLA Target (2s)",
                      "value": 2000
                    }
                  ]
                }
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 14,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/Lambda", "Duration", "FunctionName", "${Environment}-document-processing" ],
                  [ "...", "${Environment}-sow-generation" ],
                  [ "...", "${Environment}-notification-service" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Lambda Function Performance",
                "period": 300,
                "stat": "Average"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 14,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/Bedrock", "InvocationLatency", "ModelId", "anthropic.claude-3-5-sonnet-20241022-v2:0" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Bedrock Model Latency",
                "period": 300,
                "stat": "Average",
                "annotations": {
                  "horizontal": [
                    {
                      "label": "Target Latency (30s)",
                      "value": 30000
                    }
                  ]
                }
              }
            }
          ]
        }

  # Cost Monitoring Dashboard
  CostMonitoringDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub '${Environment}-cost-monitoring-dashboard'
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "text",
              "x": 0,
              "y": 0,
              "width": 24,
              "height": 2,
              "properties": {
                "markdown": "# Cost Monitoring Dashboard - ${Environment}\n\n**Focus:** Resource usage and cost optimization opportunities"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 2,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/Bedrock", "InputTokenCount", "ModelId", "anthropic.claude-3-5-sonnet-20241022-v2:0" ],
                  [ ".", "OutputTokenCount", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": true,
                "region": "${AWS::Region}",
                "title": "Bedrock Token Usage (Cost Driver)",
                "period": 3600
              }
            },
            {
              "type": "metric",
              "x": 8,
              "y": 2,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ECS", "RunningTaskCount", "ServiceName", "${Environment}-backend-service", "ClusterName", "${Environment}-uk-home-improvement-cluster" ],
                  [ "...", "${Environment}-frontend-service", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": true,
                "region": "${AWS::Region}",
                "title": "ECS Task Count (Compute Cost)",
                "period": 3600
              }
            },
            {
              "type": "metric",
              "x": 16,
              "y": 2,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/DynamoDB", "ConsumedReadCapacityUnits", "TableName", "${Environment}-uk-home-improvement" ],
                  [ ".", "ConsumedWriteCapacityUnits", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": true,
                "region": "${AWS::Region}",
                "title": "DynamoDB Capacity Usage",
                "period": 3600
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 8,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/Lambda", "Invocations", "FunctionName", "${Environment}-document-processing" ],
                  [ "...", "${Environment}-sow-generation" ],
                  [ "...", "${Environment}-notification-service" ]
                ],
                "view": "timeSeries",
                "stacked": true,
                "region": "${AWS::Region}",
                "title": "Lambda Invocations (Execution Cost)",
                "period": 3600
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 8,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/Lambda", "Duration", "FunctionName", "${Environment}-document-processing" ],
                  [ "...", "${Environment}-sow-generation" ],
                  [ "...", "${Environment}-notification-service" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Lambda Duration (Billing Time)",
                "period": 3600,
                "stat": "Sum"
              }
            }
          ]
        }

Outputs:
  ComprehensiveDashboardURL:
    Description: Comprehensive Application Dashboard URL
    Value: !Sub 'https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${Environment}-comprehensive-application-dashboard'
    Export:
      Name: !Sub '${Environment}-Comprehensive-Dashboard-URL'

  PerformanceDashboardURL:
    Description: Performance Monitoring Dashboard URL
    Value: !Sub 'https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${Environment}-performance-monitoring-dashboard'
    Export:
      Name: !Sub '${Environment}-Performance-Dashboard-URL'

  CostDashboardURL:
    Description: Cost Monitoring Dashboard URL
    Value: !Sub 'https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${Environment}-cost-monitoring-dashboard'
    Export:
      Name: !Sub '${Environment}-Cost-Dashboard-URL'